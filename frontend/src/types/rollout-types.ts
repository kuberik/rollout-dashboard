/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        KubernetesMetadata: {
            /** @description Name must be unique within a namespace */
            name?: string;
            /** @description Namespace defines the space within which each name must be unique */
            namespace?: string;
            /** @description Annotations is an unstructured key value map stored with a resource */
            annotations?: {
                [key: string]: string;
            };
            /** @description Map of string keys and values that can be used to organize and categorize resources */
            labels?: {
                [key: string]: string;
            };
            /** @description ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow */
            managedFields?: {
                /** @description Manager is an identifier of the workflow managing these fields */
                manager?: string;
                /** @description Operation is the type of operation which lead to this version of the managedFields */
                operation?: string;
                /** @description APIVersion defines the version of this resource that this field set applies to */
                apiVersion?: string;
                /**
                 * Format: date-time
                 * @description Time is timestamp of when these fields were set
                 */
                time?: string;
                /** @description FieldsType is the discriminator for the different fields format and version */
                fieldsType?: string;
                /** @description FieldsV1 holds the first JSON version format */
                fieldsV1?: string;
            }[];
        };
        /** @description Rollout is the Schema for the rollouts API. */
        Rollout: {
            /** @description APIVersion defines the versioned schema of this representation of an object.
             *     Servers should convert recognized schemas to the latest internal value, and
             *     may reject unrecognized values.
             *     More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources */
            apiVersion?: string;
            /** @description Kind is a string value representing the REST resource this object represents.
             *     Servers may infer this from the endpoint the client submits requests to.
             *     Cannot be updated.
             *     In CamelCase.
             *     More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds */
            kind?: string;
            metadata?: components["schemas"]["KubernetesMetadata"];
            /** @description RolloutSpec defines the desired state of Rollout. */
            spec?: {
                /** @description HealthCheckSelector specifies the label selector for matching HealthChecks */
                healthCheckSelector?: {
                    /** @description matchExpressions is a list of label selector requirements. The requirements are ANDed. */
                    matchExpressions?: {
                        /** @description key is the label key that the selector applies to. */
                        key: string;
                        /** @description operator represents a key's relationship to a set of values.
                         *     Valid operators are In, NotIn, Exists and DoesNotExist. */
                        operator: string;
                        /** @description values is an array of string values. If the operator is In or NotIn,
                         *     the values array must be non-empty. If the operator is Exists or DoesNotExist,
                         *     the values array must be empty. This array is replaced during a strategic
                         *     merge patch. */
                        values?: string[];
                    }[];
                    /** @description matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                     *     map is equivalent to an element of matchExpressions, whose key field is "key", the
                     *     operator is "In", and the values array contains only "value". The requirements are ANDed. */
                    matchLabels?: {
                        [key: string]: string;
                    };
                };
                /** @description MaxBakeTime specifies the maximum time to wait for health checks before marking as failed
                 *     This is the maximum time the rollout will wait for health checks to pass before failing.
                 *     If not specified, the rollout will wait indefinitely. Must be greater than MinBakeTime if both are specified. */
                maxBakeTime?: string;
                /** @description MinBakeTime specifies how long to wait after deployment before marking as successful
                 *     This is the minimum time that must pass before the rollout can be considered successful,
                 *     even if all health checks are passing. If not specified, no minimum wait time is enforced. */
                minBakeTime?: string;
                /** @description ReleasesImagePolicy specifies the ImagePolicy that provides available releases */
                releasesImagePolicy: {
                    /**
                     * @description Name of the referent.
                     *     This field is effectively required, but due to backwards compatibility is
                     *     allowed to be empty. Instances of this type with an empty value here are
                     *     almost certainly wrong.
                     *     More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                     * @default
                     */
                    name: string;
                };
                /**
                 * Format: int32
                 * @description VersionHistoryLimit defines the maximum number of entries to keep in the deployment history
                 * @default 5
                 */
                versionHistoryLimit: number;
                /** @description WantedVersion specifies a specific version to deploy, overriding the automatic version selection */
                wantedVersion?: string;
            };
            /** @description RolloutStatus defines the observed state of Rollout. */
            status?: {
                /** @description AvailableReleases is a list of all releases available in the releases repository. */
                availableReleases?: string[];
                /** @description Conditions represents the current state of the rollout process. */
                conditions?: {
                    /**
                     * Format: date-time
                     * @description lastTransitionTime is the last time the condition transitioned from one status to another.
                     *     This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                     */
                    lastTransitionTime: string;
                    /** @description message is a human readable message indicating details about the transition.
                     *     This may be an empty string. */
                    message: string;
                    /**
                     * Format: int64
                     * @description observedGeneration represents the .metadata.generation that the condition was set based upon.
                     *     For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                     *     with respect to the current state of the instance.
                     */
                    observedGeneration?: number;
                    /** @description reason contains a programmatic identifier indicating the reason for the condition's last transition.
                     *     Producers of specific condition types may define expected values and meanings for this field,
                     *     and whether the values are considered a guaranteed API.
                     *     The value should be a CamelCase string.
                     *     This field may not be empty. */
                    reason: string;
                    /**
                     * @description status of the condition, one of True, False, Unknown.
                     * @enum {string}
                     */
                    status: "True" | "False" | "Unknown";
                    /** @description type of condition in CamelCase or in foo.example.com/CamelCase. */
                    type: string;
                }[];
                /** @description GatedReleaseCandidates is a list of release candidates that have passed through all gates.
                 *     This shows which versions are actually available for deployment after gate evaluation. */
                gatedReleaseCandidates?: string[];
                /** @description Gates summarizes the status of each gate relevant to this rollout. */
                gates?: {
                    /** @description AllowedVersions is a list of versions that are allowed by the gate. */
                    allowedVersions?: string[];
                    /** @description Message is a message describing the status of the gate. */
                    message?: string;
                    /** @description Name is the name of the gate. */
                    name: string;
                    /** @description Passing is true if the gate is passing, false if it is blocking. */
                    passing?: boolean;
                }[];
                /** @description History tracks the deployment history of this Rollout.
                 *     Each entry contains the version deployed and the timestamp of the deployment. */
                history?: {
                    /**
                     * Format: date-time
                     * @description BakeEndTime is the time when the bake period ended for this deployment
                     *     This is when the bake process completed (either successfully or with failure).
                     */
                    bakeEndTime?: string;
                    /**
                     * Format: date-time
                     * @description BakeStartTime is the time when the bake period started for this deployment
                     *     This is when the rollout controller began monitoring the deployment for stability.
                     */
                    bakeStartTime?: string;
                    /** @description BakeStatus tracks the bake state for this deployment (e.g., None, InProgress, Succeeded, Failed, Cancelled)
                     *     The bake process ensures that the deployment is stable and healthy before marking as successful. */
                    bakeStatus?: string;
                    /** @description BakeStatusMessage provides details about the bake state for this deployment
                     *     This field contains human-readable information about why the bake status is what it is. */
                    bakeStatusMessage?: string;
                    /**
                     * Format: date-time
                     * @description Timestamp is the time when the deployment occurred.
                     */
                    timestamp: string;
                    /** @description Version is the version that was deployed. */
                    version: string;
                }[];
                /** @description ReleaseCandidates is a list of releases that are candidates for the next deployment.
                 *     These are filtered from AvailableReleases based on deployment history and version ordering. */
                releaseCandidates?: string[];
            };
        };
        /** @description RolloutGate is the Schema for the rolloutgates API. */
        RolloutGate: {
            /** @description APIVersion defines the versioned schema of this representation of an object.
             *     Servers should convert recognized schemas to the latest internal value, and
             *     may reject unrecognized values.
             *     More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources */
            apiVersion?: string;
            /** @description Kind is a string value representing the REST resource this object represents.
             *     Servers may infer this from the endpoint the client submits requests to.
             *     Cannot be updated.
             *     In CamelCase.
             *     More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds */
            kind?: string;
            metadata?: components["schemas"]["KubernetesMetadata"];
            /** @description RolloutGateSpec defines the desired state of RolloutGate. */
            spec?: {
                /** @description AllowedVersions is a list of versions that Rollout can be updated to. */
                allowedVersions?: string[];
                /**
                 * @description Passing is true if the RolloutGate is passing.
                 * @default true
                 */
                passing: boolean;
                /** @description LocalObjectReference contains enough information to let you locate the
                 *     referenced object inside the same namespace. */
                rolloutRef: {
                    /**
                     * @description Name of the referent.
                     *     This field is effectively required, but due to backwards compatibility is
                     *     allowed to be empty. Instances of this type with an empty value here are
                     *     almost certainly wrong.
                     *     More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                     * @default
                     */
                    name: string;
                };
            };
            /** @description RolloutGateStatus defines the observed state of RolloutGate. */
            status?: Record<string, never>;
        };
        /** @description HealthCheck is the Schema for the healthchecks API. */
        HealthCheck: {
            /** @description APIVersion defines the versioned schema of this representation of an object.
             *     Servers should convert recognized schemas to the latest internal value, and
             *     may reject unrecognized values.
             *     More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources */
            apiVersion?: string;
            /** @description Kind is a string value representing the REST resource this object represents.
             *     Servers may infer this from the endpoint the client submits requests to.
             *     Cannot be updated.
             *     In CamelCase.
             *     More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds */
            kind?: string;
            metadata?: components["schemas"]["KubernetesMetadata"];
            /** @description HealthCheckSpec defines the desired state of HealthCheck. */
            spec?: Record<string, never>;
            /** @description HealthCheckStatus defines the observed state of HealthCheck. */
            status?: {
                /**
                 * Format: date-time
                 * @description LastErrorTime is the timestamp of the most recent error state
                 */
                lastErrorTime?: string;
                /** @description Status indicates the health state of the check (e.g., 'Healthy', 'Unhealthy', 'Error') */
                status?: string;
            };
        };
        /** @description KubeStatus is the Schema for the kubestatuses API. */
        KubeStatus: {
            /** @description APIVersion defines the versioned schema of this representation of an object.
             *     Servers should convert recognized schemas to the latest internal value, and
             *     may reject unrecognized values.
             *     More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources */
            apiVersion?: string;
            /** @description Kind is a string value representing the REST resource this object represents.
             *     Servers may infer this from the endpoint the client submits requests to.
             *     Cannot be updated.
             *     In CamelCase.
             *     More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds */
            kind?: string;
            metadata?: components["schemas"]["KubernetesMetadata"];
            /** @description KubeStatusSpec defines the desired state of KubeStatus. */
            spec?: {
                /** @description TargetRef references a namespace-local object whose status should be evaluated. */
                targetRef: {
                    /** @description APIVersion of the target object, e.g. "apps/v1" or "kustomize.toolkit.fluxcd.io/v1beta2" */
                    apiVersion: string;
                    /** @description Kind of the target object, e.g. "Deployment" or "Kustomization" */
                    kind: string;
                    /** @description Name of the target object in the same namespace as this KubeStatus */
                    name: string;
                };
                /** @description Template customizes the generated HealthCheck metadata (labels/annotations). */
                template?: {
                    /** @description Metadata contains labels/annotations for the HealthCheck. */
                    metadata?: {
                        /** @description Annotations to set on the HealthCheck */
                        annotations?: {
                            [key: string]: string;
                        };
                        /** @description Labels to set on the HealthCheck */
                        labels?: {
                            [key: string]: string;
                        };
                    };
                };
            };
            /** @description KubeStatusStatus defines the observed state of KubeStatus. */
            status?: Record<string, never>;
        };
        /** @description Kustomization is the Schema for the kustomizations API. */
        Kustomization: {
            /** @description APIVersion defines the versioned schema of this representation of an object.
             *     Servers should convert recognized schemas to the latest internal value, and
             *     may reject unrecognized values.
             *     More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources */
            apiVersion?: string;
            /** @description Kind is a string value representing the REST resource this object represents.
             *     Servers may infer this from the endpoint the client submits requests to.
             *     Cannot be updated.
             *     In CamelCase.
             *     More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds */
            kind?: string;
            metadata?: components["schemas"]["KubernetesMetadata"];
            /** @description KustomizationSpec defines the configuration to calculate the desired state
             *     from a Source using Kustomize. */
            spec?: {
                /** @description CommonMetadata specifies the common labels and annotations that are
                 *     applied to all resources. Any existing label or annotation will be
                 *     overridden if its key matches a common one. */
                commonMetadata?: {
                    /** @description Annotations to be added to the object's metadata. */
                    annotations?: {
                        [key: string]: string;
                    };
                    /** @description Labels to be added to the object's metadata. */
                    labels?: {
                        [key: string]: string;
                    };
                };
                /** @description Components specifies relative paths to specifications of other Components. */
                components?: string[];
                /** @description Decrypt Kubernetes secrets before applying them on the cluster. */
                decryption?: {
                    /**
                     * @description Provider is the name of the decryption engine.
                     * @enum {string}
                     */
                    provider: "sops";
                    /** @description The secret name containing the private OpenPGP keys used for decryption.
                     *     A static credential for a cloud provider defined inside the Secret
                     *     takes priority to secret-less authentication with the ServiceAccountName
                     *     field. */
                    secretRef?: {
                        /** @description Name of the referent. */
                        name: string;
                    };
                    /** @description ServiceAccountName is the name of the service account used to
                     *     authenticate with KMS services from cloud providers. If a
                     *     static credential for a given cloud provider is defined
                     *     inside the Secret referenced by SecretRef, that static
                     *     credential takes priority. */
                    serviceAccountName?: string;
                };
                /**
                 * @description DeletionPolicy can be used to control garbage collection when this
                 *     Kustomization is deleted. Valid values are ('MirrorPrune', 'Delete',
                 *     'WaitForTermination', 'Orphan'). 'MirrorPrune' mirrors the Prune field
                 *     (orphan if false, delete if true). Defaults to 'MirrorPrune'.
                 * @enum {string}
                 */
                deletionPolicy?: "MirrorPrune" | "Delete" | "WaitForTermination" | "Orphan";
                /** @description DependsOn may contain a meta.NamespacedObjectReference slice
                 *     with references to Kustomization resources that must be ready before this
                 *     Kustomization can be reconciled. */
                dependsOn?: {
                    /** @description Name of the referent. */
                    name: string;
                    /** @description Namespace of the referent, when not specified it acts as LocalObjectReference. */
                    namespace?: string;
                }[];
                /**
                 * @description Force instructs the controller to recreate resources
                 *     when patching fails due to an immutable field change.
                 * @default false
                 */
                force: boolean;
                /** @description HealthCheckExprs is a list of healthcheck expressions for evaluating the
                 *     health of custom resources using Common Expression Language (CEL).
                 *     The expressions are evaluated only when Wait or HealthChecks are specified. */
                healthCheckExprs?: {
                    /** @description APIVersion of the custom resource under evaluation. */
                    apiVersion: string;
                    /** @description Current is the CEL expression that determines if the status
                     *     of the custom resource has reached the desired state. */
                    current: string;
                    /** @description Failed is the CEL expression that determines if the status
                     *     of the custom resource has failed to reach the desired state. */
                    failed?: string;
                    /** @description InProgress is the CEL expression that determines if the status
                     *     of the custom resource has not yet reached the desired state. */
                    inProgress?: string;
                    /** @description Kind of the custom resource under evaluation. */
                    kind: string;
                }[];
                /** @description A list of resources to be included in the health assessment. */
                healthChecks?: {
                    /** @description API version of the referent, if not specified the Kubernetes preferred version will be used. */
                    apiVersion?: string;
                    /** @description Kind of the referent. */
                    kind: string;
                    /** @description Name of the referent. */
                    name: string;
                    /** @description Namespace of the referent, when not specified it acts as LocalObjectReference. */
                    namespace?: string;
                }[];
                /** @description Images is a list of (image name, new name, new tag or digest)
                 *     for changing image names, tags or digests. This can also be achieved with a
                 *     patch, but this operator is simpler to specify. */
                images?: {
                    /** @description Digest is the value used to replace the original image tag.
                     *     If digest is present NewTag value is ignored. */
                    digest?: string;
                    /** @description Name is a tag-less image name. */
                    name: string;
                    /** @description NewName is the value used to replace the original name. */
                    newName?: string;
                    /** @description NewTag is the value used to replace the original tag. */
                    newTag?: string;
                }[];
                /** @description The interval at which to reconcile the Kustomization.
                 *     This interval is approximate and may be subject to jitter to ensure
                 *     efficient use of resources. */
                interval: string;
                /** @description The KubeConfig for reconciling the Kustomization on a remote cluster.
                 *     When used in combination with KustomizationSpec.ServiceAccountName,
                 *     forces the controller to act on behalf of that Service Account at the
                 *     target cluster.
                 *     If the --default-service-account flag is set, its value will be used as
                 *     a controller level fallback for when KustomizationSpec.ServiceAccountName
                 *     is empty. */
                kubeConfig?: {
                    /** @description SecretRef holds the name of a secret that contains a key with
                     *     the kubeconfig file as the value. If no key is set, the key will default
                     *     to 'value'.
                     *     It is recommended that the kubeconfig is self-contained, and the secret
                     *     is regularly updated if credentials such as a cloud-access-token expire.
                     *     Cloud specific `cmd-path` auth helpers will not function without adding
                     *     binaries and credentials to the Pod that is responsible for reconciling
                     *     Kubernetes resources. */
                    secretRef: {
                        /** @description Key in the Secret, when not specified an implementation-specific default key is used. */
                        key?: string;
                        /** @description Name of the Secret. */
                        name: string;
                    };
                };
                /** @description NamePrefix will prefix the names of all managed resources. */
                namePrefix?: string;
                /** @description NameSuffix will suffix the names of all managed resources. */
                nameSuffix?: string;
                /** @description Strategic merge and JSON patches, defined as inline YAML objects,
                 *     capable of targeting objects based on kind, label and annotation selectors. */
                patches?: {
                    /** @description Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with
                     *     an array of operation objects. */
                    patch: string;
                    /** @description Target points to the resources that the patch document should be applied to. */
                    target?: {
                        /** @description AnnotationSelector is a string that follows the label selection expression
                         *     https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                         *     It matches with the resource annotations. */
                        annotationSelector?: string;
                        /** @description Group is the API group to select resources from.
                         *     Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                         *     https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md */
                        group?: string;
                        /** @description Kind of the API Group to select resources from.
                         *     Together with Group and Version it is capable of unambiguously
                         *     identifying and/or selecting resources.
                         *     https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md */
                        kind?: string;
                        /** @description LabelSelector is a string that follows the label selection expression
                         *     https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                         *     It matches with the resource labels. */
                        labelSelector?: string;
                        /** @description Name to match resources with. */
                        name?: string;
                        /** @description Namespace to select resources from. */
                        namespace?: string;
                        /** @description Version of the API Group to select resources from.
                         *     Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                         *     https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md */
                        version?: string;
                    };
                }[];
                /** @description Path to the directory containing the kustomization.yaml file, or the
                 *     set of plain YAMLs a kustomization.yaml should be generated for.
                 *     Defaults to 'None', which translates to the root path of the SourceRef. */
                path?: string;
                /** @description PostBuild describes which actions to perform on the YAML manifest
                 *     generated by building the kustomize overlay. */
                postBuild?: {
                    /** @description Substitute holds a map of key/value pairs.
                     *     The variables defined in your YAML manifests that match any of the keys
                     *     defined in the map will be substituted with the set value.
                     *     Includes support for bash string replacement functions
                     *     e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}. */
                    substitute?: {
                        [key: string]: string;
                    };
                    /** @description SubstituteFrom holds references to ConfigMaps and Secrets containing
                     *     the variables and their values to be substituted in the YAML manifests.
                     *     The ConfigMap and the Secret data keys represent the var names, and they
                     *     must match the vars declared in the manifests for the substitution to
                     *     happen. */
                    substituteFrom?: {
                        /**
                         * @description Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                         * @enum {string}
                         */
                        kind: "Secret" | "ConfigMap";
                        /** @description Name of the values referent. Should reside in the same namespace as the
                         *     referring resource. */
                        name: string;
                        /**
                         * @description Optional indicates whether the referenced resource must exist, or whether to
                         *     tolerate its absence. If true and the referenced resource is absent, proceed
                         *     as if the resource was present but empty, without any variables defined.
                         * @default false
                         */
                        optional: boolean;
                    }[];
                };
                /** @description Prune enables garbage collection. */
                prune: boolean;
                /** @description The interval at which to retry a previously failed reconciliation.
                 *     When not specified, the controller uses the KustomizationSpec.Interval
                 *     value to retry failures. */
                retryInterval?: string;
                /** @description The name of the Kubernetes service account to impersonate
                 *     when reconciling this Kustomization. */
                serviceAccountName?: string;
                /** @description Reference of the source where the kustomization file is. */
                sourceRef: {
                    /** @description API version of the referent. */
                    apiVersion?: string;
                    /**
                     * @description Kind of the referent.
                     * @enum {string}
                     */
                    kind: "OCIRepository" | "GitRepository" | "Bucket";
                    /** @description Name of the referent. */
                    name: string;
                    /** @description Namespace of the referent, defaults to the namespace of the Kubernetes
                     *     resource object that contains the reference. */
                    namespace?: string;
                };
                /** @description This flag tells the controller to suspend subsequent kustomize executions,
                 *     it does not apply to already started executions. Defaults to false. */
                suspend?: boolean;
                /** @description TargetNamespace sets or overrides the namespace in the
                 *     kustomization.yaml file. */
                targetNamespace?: string;
                /** @description Timeout for validation, apply and health checking operations.
                 *     Defaults to 'Interval' duration. */
                timeout?: string;
                /** @description Wait instructs the controller to check the health of all the reconciled
                 *     resources. When enabled, the HealthChecks are ignored. Defaults to false. */
                wait?: boolean;
            };
            /**
             * @description KustomizationStatus defines the observed state of a kustomization.
             * @default {
             *       "observedGeneration": -1
             *     }
             */
            status: {
                conditions?: {
                    /**
                     * Format: date-time
                     * @description lastTransitionTime is the last time the condition transitioned from one status to another.
                     *     This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                     */
                    lastTransitionTime: string;
                    /** @description message is a human readable message indicating details about the transition.
                     *     This may be an empty string. */
                    message: string;
                    /**
                     * Format: int64
                     * @description observedGeneration represents the .metadata.generation that the condition was set based upon.
                     *     For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                     *     with respect to the current state of the instance.
                     */
                    observedGeneration?: number;
                    /** @description reason contains a programmatic identifier indicating the reason for the condition's last transition.
                     *     Producers of specific condition types may define expected values and meanings for this field,
                     *     and whether the values are considered a guaranteed API.
                     *     The value should be a CamelCase string.
                     *     This field may not be empty. */
                    reason: string;
                    /**
                     * @description status of the condition, one of True, False, Unknown.
                     * @enum {string}
                     */
                    status: "True" | "False" | "Unknown";
                    /** @description type of condition in CamelCase or in foo.example.com/CamelCase. */
                    type: string;
                }[];
                /** @description Inventory contains the list of Kubernetes resource object references that
                 *     have been successfully applied. */
                inventory?: {
                    /** @description Entries of Kubernetes resource object references. */
                    entries: {
                        /** @description ID is the string representation of the Kubernetes resource object's metadata,
                         *     in the format '<namespace>_<name>_<group>_<kind>'. */
                        id: string;
                        /** @description Version is the API version of the Kubernetes resource object's kind. */
                        v: string;
                    }[];
                };
                /** @description The last successfully applied origin revision.
                 *     Equals the origin revision of the applied Artifact from the referenced Source.
                 *     Usually present on the Metadata of the applied Artifact and depends on the
                 *     Source type, e.g. for OCI it's the value associated with the key
                 *     "org.opencontainers.image.revision". */
                lastAppliedOriginRevision?: string;
                /** @description The last successfully applied revision.
                 *     Equals the Revision of the applied Artifact from the referenced Source. */
                lastAppliedRevision?: string;
                /** @description LastAttemptedRevision is the revision of the last reconciliation attempt. */
                lastAttemptedRevision?: string;
                /** @description LastHandledReconcileAt holds the value of the most recent
                 *     reconcile request value, so a change of the annotation value
                 *     can be detected. */
                lastHandledReconcileAt?: string;
                /**
                 * Format: int64
                 * @description ObservedGeneration is the last reconciled generation.
                 */
                observedGeneration?: number;
            };
        };
        /** @description OCIRepository is the Schema for the ocirepositories API */
        OCIRepository: {
            /** @description APIVersion defines the versioned schema of this representation of an object.
             *     Servers should convert recognized schemas to the latest internal value, and
             *     may reject unrecognized values.
             *     More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources */
            apiVersion?: string;
            /** @description Kind is a string value representing the REST resource this object represents.
             *     Servers may infer this from the endpoint the client submits requests to.
             *     Cannot be updated.
             *     In CamelCase.
             *     More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds */
            kind?: string;
            metadata?: components["schemas"]["KubernetesMetadata"];
            /** @description OCIRepositorySpec defines the desired state of OCIRepository */
            spec?: {
                /** @description CertSecretRef can be given the name of a Secret containing
                 *     either or both of
                 *
                 *     - a PEM-encoded client certificate (`tls.crt`) and private
                 *     key (`tls.key`);
                 *     - a PEM-encoded CA certificate (`ca.crt`)
                 *
                 *     and whichever are supplied, will be used for connecting to the
                 *     registry. The client cert and key are useful if you are
                 *     authenticating with a certificate; the CA cert is useful if
                 *     you are using a self-signed server certificate. The Secret must
                 *     be of type `Opaque` or `kubernetes.io/tls`. */
                certSecretRef?: {
                    /** @description Name of the referent. */
                    name: string;
                };
                /** @description Ignore overrides the set of excluded patterns in the .sourceignore format
                 *     (which is the same as .gitignore). If not provided, a default will be used,
                 *     consult the documentation for your version to find out what those are. */
                ignore?: string;
                /** @description Insecure allows connecting to a non-TLS HTTP container registry. */
                insecure?: boolean;
                /** @description Interval at which the OCIRepository URL is checked for updates.
                 *     This interval is approximate and may be subject to jitter to ensure
                 *     efficient use of resources. */
                interval: string;
                /** @description LayerSelector specifies which layer should be extracted from the OCI artifact.
                 *     When not specified, the first layer found in the artifact is selected. */
                layerSelector?: {
                    /** @description MediaType specifies the OCI media type of the layer
                     *     which should be extracted from the OCI Artifact. The
                     *     first layer matching this type is selected. */
                    mediaType?: string;
                    /**
                     * @description Operation specifies how the selected layer should be processed.
                     *     By default, the layer compressed content is extracted to storage.
                     *     When the operation is set to 'copy', the layer compressed content
                     *     is persisted to storage as it is.
                     * @enum {string}
                     */
                    operation?: "extract" | "copy";
                };
                /**
                 * @description The provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'.
                 *     When not specified, defaults to 'generic'.
                 * @default generic
                 * @enum {string}
                 */
                provider: "generic" | "aws" | "azure" | "gcp";
                /** @description ProxySecretRef specifies the Secret containing the proxy configuration
                 *     to use while communicating with the container registry. */
                proxySecretRef?: {
                    /** @description Name of the referent. */
                    name: string;
                };
                /** @description The OCI reference to pull and monitor for changes,
                 *     defaults to the latest tag. */
                ref?: {
                    /** @description Digest is the image digest to pull, takes precedence over SemVer.
                     *     The value should be in the format 'sha256:<HASH>'. */
                    digest?: string;
                    /** @description SemVer is the range of tags to pull selecting the latest within
                     *     the range, takes precedence over Tag. */
                    semver?: string;
                    /** @description SemverFilter is a regex pattern to filter the tags within the SemVer range. */
                    semverFilter?: string;
                    /** @description Tag is the image tag to pull, defaults to latest. */
                    tag?: string;
                };
                /** @description SecretRef contains the secret name containing the registry login
                 *     credentials to resolve image metadata.
                 *     The secret must be of type kubernetes.io/dockerconfigjson. */
                secretRef?: {
                    /** @description Name of the referent. */
                    name: string;
                };
                /** @description ServiceAccountName is the name of the Kubernetes ServiceAccount used to authenticate
                 *     the image pull if the service account has attached pull secrets. For more information:
                 *     https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account */
                serviceAccountName?: string;
                /** @description This flag tells the controller to suspend the reconciliation of this source. */
                suspend?: boolean;
                /**
                 * @description The timeout for remote OCI Repository operations like pulling, defaults to 60s.
                 * @default 60s
                 */
                timeout: string;
                /** @description URL is a reference to an OCI artifact repository hosted
                 *     on a remote container registry. */
                url: string;
                /** @description Verify contains the secret name containing the trusted public keys
                 *     used to verify the signature and specifies which provider to use to check
                 *     whether OCI image is authentic. */
                verify?: {
                    /** @description MatchOIDCIdentity specifies the identity matching criteria to use
                     *     while verifying an OCI artifact which was signed using Cosign keyless
                     *     signing. The artifact's identity is deemed to be verified if any of the
                     *     specified matchers match against the identity. */
                    matchOIDCIdentity?: {
                        /** @description Issuer specifies the regex pattern to match against to verify
                         *     the OIDC issuer in the Fulcio certificate. The pattern must be a
                         *     valid Go regular expression. */
                        issuer: string;
                        /** @description Subject specifies the regex pattern to match against to verify
                         *     the identity subject in the Fulcio certificate. The pattern must
                         *     be a valid Go regular expression. */
                        subject: string;
                    }[];
                    /**
                     * @description Provider specifies the technology used to sign the OCI Artifact.
                     * @default cosign
                     * @enum {string}
                     */
                    provider: "cosign" | "notation";
                    /** @description SecretRef specifies the Kubernetes Secret containing the
                     *     trusted public keys. */
                    secretRef?: {
                        /** @description Name of the referent. */
                        name: string;
                    };
                };
            };
            /**
             * @description OCIRepositoryStatus defines the observed state of OCIRepository
             * @default {
             *       "observedGeneration": -1
             *     }
             */
            status: {
                /** @description Artifact represents the output of the last successful OCI Repository sync. */
                artifact?: {
                    /** @description Digest is the digest of the file in the form of '<algorithm>:<checksum>'. */
                    digest?: string;
                    /**
                     * Format: date-time
                     * @description LastUpdateTime is the timestamp corresponding to the last update of the
                     *     Artifact.
                     */
                    lastUpdateTime: string;
                    /** @description Metadata holds upstream information such as OCI annotations. */
                    metadata?: {
                        [key: string]: string;
                    };
                    /** @description Path is the relative file path of the Artifact. It can be used to locate
                     *     the file in the root of the Artifact storage on the local file system of
                     *     the controller managing the Source. */
                    path: string;
                    /** @description Revision is a human-readable identifier traceable in the origin source
                     *     system. It can be a Git commit SHA, Git tag, a Helm chart version, etc. */
                    revision: string;
                    /**
                     * Format: int64
                     * @description Size is the number of bytes in the file.
                     */
                    size?: number;
                    /** @description URL is the HTTP address of the Artifact as exposed by the controller
                     *     managing the Source. It can be used to retrieve the Artifact for
                     *     consumption, e.g. by another controller applying the Artifact contents. */
                    url: string;
                };
                /** @description Conditions holds the conditions for the OCIRepository. */
                conditions?: {
                    /**
                     * Format: date-time
                     * @description lastTransitionTime is the last time the condition transitioned from one status to another.
                     *     This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                     */
                    lastTransitionTime: string;
                    /** @description message is a human readable message indicating details about the transition.
                     *     This may be an empty string. */
                    message: string;
                    /**
                     * Format: int64
                     * @description observedGeneration represents the .metadata.generation that the condition was set based upon.
                     *     For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                     *     with respect to the current state of the instance.
                     */
                    observedGeneration?: number;
                    /** @description reason contains a programmatic identifier indicating the reason for the condition's last transition.
                     *     Producers of specific condition types may define expected values and meanings for this field,
                     *     and whether the values are considered a guaranteed API.
                     *     The value should be a CamelCase string.
                     *     This field may not be empty. */
                    reason: string;
                    /**
                     * @description status of the condition, one of True, False, Unknown.
                     * @enum {string}
                     */
                    status: "True" | "False" | "Unknown";
                    /** @description type of condition in CamelCase or in foo.example.com/CamelCase. */
                    type: string;
                }[];
                /** @description LastHandledReconcileAt holds the value of the most recent
                 *     reconcile request value, so a change of the annotation value
                 *     can be detected. */
                lastHandledReconcileAt?: string;
                /**
                 * Format: int64
                 * @description ObservedGeneration is the last observed generation.
                 */
                observedGeneration?: number;
                /** @description ObservedIgnore is the observed exclusion patterns used for constructing
                 *     the source artifact. */
                observedIgnore?: string;
                /** @description ObservedLayerSelector is the observed layer selector used for constructing
                 *     the source artifact. */
                observedLayerSelector?: {
                    /** @description MediaType specifies the OCI media type of the layer
                     *     which should be extracted from the OCI Artifact. The
                     *     first layer matching this type is selected. */
                    mediaType?: string;
                    /**
                     * @description Operation specifies how the selected layer should be processed.
                     *     By default, the layer compressed content is extracted to storage.
                     *     When the operation is set to 'copy', the layer compressed content
                     *     is persisted to storage as it is.
                     * @enum {string}
                     */
                    operation?: "extract" | "copy";
                };
                /** @description URL is the download link for the artifact output of the last OCI Repository sync. */
                url?: string;
            };
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
